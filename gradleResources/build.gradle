/*
 * Copyright 2014-2016 Riccardo Massera (TheCoder4.Eu)
 *
 * This file is part of BootsFaces.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

 ext.extractedResources=project(':gradleResources:Bootstrap').buildDir.toString()+'/extracted'
 ext.BootstrapFolder = extractedResources+'/bootstrap-'+BootstrapVersion
 ext.BootswatchFolder = extractedResources+'/bootswatch-'+BootswatchFullVersion.replace('+','-')
 ext.PatternFlyFolder = extractedResources+'/patternfly-'+PatternFlyVersion

 ext.staticResourcesDir = "${projectDir}/staticResources"

 ext.assetResources=project(':gradleResources:compileLess').projectDir.toString()+'/build/assets'

/*
 * Tasks to Copy STATIC files to resources
 */

 def copySpecCssResources = copySpec {
     from "staticResources/css/bootstrap-multiselect.css"
     from 'staticResources/css/bootstrap-switch.css'
     from 'staticResources/css/bootstrap-tagsinput.css'
     from 'staticResources/css/bootstrap-slider.min.css'
     from 'staticResources/css/bootstrap-touchspin.min.css'
     // from 'staticResources/css/dataTables.bootstrap.min.css'
     from 'staticResources/css/jssocials.css'
     from 'staticResources/css/datatables.min.css'
     from 'staticResources/css/bootstrap-tree.css'
     from 'staticResources/css/bootstrap-treeview.min.css'
     from 'staticResources/css/animate.css'
     from 'staticResources/css/dropdowns.css'
     from 'staticResources/css/dropdown-submenu.css'
     from 'staticResources/css/fullcalendar.min.css'
     from 'staticResources/css/scrollup.css'
     from 'staticResources/css/jq.ui.core.css'
     from 'staticResources/css/jq.ui.datepicker.css'
     from 'staticResources/css/jq.ui.slider.css'
     from 'staticResources/css/jq.ui.theme.css'
     from 'staticResources/css/jquery.minicolors.css'
     from 'staticResources/css/sticky-footer-navbar.css'
     from 'staticResources/css/bootstrap-datetimepicker.min.css'
     from 'staticResources/css/typeahead.css'
 }
 task copyCssResources << {
     allThemes.each { dest ->
     copy {
       with copySpecCssResources
       into "${buildDir}/resources/META-INF/resources/bsf/css/"+dest
       println 'css2'+dest
     }
   }
 }

 task copyJsResources(type: Copy) {
   	description 'BootsFaces task: copies additional JS files to the target folder (i.e. files that are not part of Bootstrap).'
   	from 'staticResources/js/bootstrap-multiselect-collapsible-groups.js'
   	from 'staticResources/js/bootstrap-multiselect.js'
   	from 'staticResources/js/bootstrap-switch.js'
   	from 'staticResources/js/bootstrap-slider.min.js'
   	from 'staticResources/js/bootstrap-touchspin.min.js'
    from 'staticResources/js/bootstrap-tagsinput.min.js'
   	from 'staticResources/js/bootstrap-tree.js'
   	from 'staticResources/js/bootstrap-treeview.min.js'
   	from 'staticResources/js/bootstrap-notify.min.js'
   	from 'staticResources/js/bootstrap-datetimepicker.min.js'
   	from 'staticResources/js/moment-with-locales.min.js'
   	from 'staticResources/js/datatables.min.js'
   	from 'staticResources/js/fullcalendar.min.js'
   	from 'staticResources/js/fullcalendar-lang-all.js'
   	// from 'staticResources/js/jquery.dataTables.min.js'
   	from 'staticResources/js/jquery.blockUI.js'
   	// from 'staticResources/js/dataTables.bootstrap.min.js'
   	from 'staticResources/js/jquery.scrollUp.min.js'
   	from 'staticResources/js/jquery.minicolors.min.js'
   	from 'staticResources/js/moment.min.js'
   	from 'staticResources/js/typeahead.js'
   	from 'staticResources/ie8support/respond.js'
   	from 'staticResources/ie8support/html5shiv.js'
   	from 'staticResources/js/jssocials.min.js'

   	into "${buildDir}/resources/META-INF/resources/bsf/js"
 }

 task copyImageResources(type: Copy) {
   	description 'BootsFaces task: copies additional image files to the target folder (i.e. files that are not part of Bootstrap).'
   	from 'staticResources/images/waitcursor.gif'
   	from 'staticResources/images/jquery.minicolors.png'
   	into "${buildDir}/resources/META-INF/resources/bsf/images"
 }

 task copyJqResources(type: Copy) {
   	description 'BootsFaces task: copies the jQuery JS files to the target folder.'
    from 'staticResources/jq/'+jqversion
   	from 'staticResources/jq/assets'
   	into "${buildDir}/resources/META-INF/resources/bsf/jq"
 }

 task copyBootsFacesResources(dependsOn: [':gradleResources:Bootstrap:downloadResources','copyCssResources', 'copyJsResources', 'copyImageResources', 'copyJqResources']) {

 }

/* END Tasks to Copy STATIC files to resources */

/*
 * Tasks to Copy ASSET files to resources
 */

 allThemes.each {
     //create a dynamic task for each theme (in the config phase)
     def themeName ->
     tasks.create(name: "copyAssetCssTheme2$themeName", type: Copy) {
         println "Configure Task copyAssetCssTheme2$themeName from ${assetResources}/"+themeName
         from "${assetResources}/"+themeName

         into "${buildDir}/resources/META-INF/resources/bsf/css/"+themeName

         exclude 'bs-icons*'
         // Use a closure to map the file name
         rename { String fileName ->
             fileName.replace('bs-', '')
         }
     }
 }
 task copyAssetCss2Resources(dependsOn: [tasks.matching { Task task -> task.name.startsWith("copyAssetCssTheme2")}]) {

 }

 task copyIconsCss2Resources(type: Copy) {
     description 'BootsFaces task: copies the Icons CSS to the final folder.'
     from "${assetResources}/default"
     into "${buildDir}/resources/META-INF/resources/bsf/css"
     include 'bs-icons.css'
     // Use a closure to map the file name
     rename { String fileName ->
         fileName.replace('bs-', '')
     }
 }

 task copyAssetJs2Resources(type: Copy) {
     description 'BootsFaces task: copies the Bootstrap JS file to the target folder.'
     from "${assetResources}/js"
     into "${buildDir}/resources/META-INF/resources/bsf/js"
     exclude "*-*.js*"
     exclude "*.gz"
 }

 def copySpecBsfCss2Resources = copySpec {
     from "${assetResources}/bsf.css"
 }
 task copyBsfCss << {
   allThemes.each { dest ->
     copy {
       with copySpecBsfCss2Resources
       into "${buildDir}/resources/META-INF/resources/bsf/css/"+dest
       println 'copy bsfcss2 '+dest
     }
   }
 }


 task copyBsfJs(type: Copy) {
   	description 'BootsFaces task: copies the bsf.js file. bsf.js contains the AJAX JS engine of BootsFaces.'
   	from "${assetResources}/bsf.js"
   	into "${buildDir}/resources/META-INF/resources/bsf/js"
 }

 task copyBootstrapFonts(type: Copy) {
   	description 'BootsFaces task: copies the Bootstrap fonts to the resources folder.'
   	from BootstrapFolder+'/fonts'
   	into "${buildDir}/resources/META-INF/resources/fonts"
 }

 task copyAssetResources(dependsOn: ['copyAssetCss2Resources','copyIconsCss2Resources', 'copyAssetJs2Resources', 'copyBsfCss', 'copyBsfJs', 'copyBootstrapFonts']) {
     description 'BootsFaces task: copies Asset resources to the resources folder.'
 }
copyAssetResources.mustRunAfter copyBootsFacesResources
copyAssetResources.mustRunAfter ':gradleResources:compileLess:compileAndMinify'

/* END Tasks to Copy ASSET files to resources */

task updateGradleResources(type: Copy) {
  	description 'BootsFaces task: completes the files generated by the Gradle build by the files cached in the Maven build directory.'
  	from "${projectDir}/../mavenResources/META-INF/resources/bsf/css/other"
  	into "${buildDir}/resources/META-INF/resources/bsf/css/other"

}
updateGradleResources.mustRunAfter copyAssetResources

/*
 * Tasks for Maven
 */
task cleanMavenResources(type: Delete) {
  	description 'BootsFaces task: deletes every file in the mavenResource folder.'
  	delete fileTree(dir: "${projectDir}/../mavenResources/META-INF/resources/fonts")
    delete fileTree(dir: "${projectDir}/../mavenResources/META-INF/resources/bsf/css")
  	delete fileTree(dir: "${projectDir}/../mavenResources/META-INF/resources/bsf/jq")
  	delete fileTree(dir: "${projectDir}/../mavenResources/META-INF/resources/bsf/js")
}
cleanMavenResources.mustRunAfter updateGradleResources

task updateMavenResources(type: Copy) {
  	description 'BootsFaces task: replaces every file in the mavenResource folder by the file generated by the Gradle build.'
  	from "${buildDir}/resources/"
  	into "${projectDir}/../mavenResources"
}
updateMavenResources.mustRunAfter cleanMavenResources
/* END Tasks for Maven */



 /* MAIN Task */
 task buildResources(dependsOn: [':gradleResources:Bootstrap:downloadResources', 'copyBootsFacesResources',
                                 ':gradleResources:compileLess:compileAndMinify', 'copyAssetResources',
                                 'updateGradleResources', //updateGradleResources just copies "other" Theme
                                 'cleanMavenResources', 'updateMavenResources']) {
    description 'BootsFaces task: downloads Bootstrap from the internet and generates both the mavenResource folder and the Gradle resource folder from scratch.'

 }

 //defaultTasks 'buildResources'
